{
  "Flask Route Template": {
    "prefix": "flask_route",
    "body": [
      "from flask import Blueprint, render_template",
      "import x",
      "",
      "from icecream import ic",
      "ic.configureOutput(prefix=f'***** | ', includeContext=True)",
      "",
      "ROUTE_VARIABLE_${1:route_name} = Blueprint(\"ROUTE_VARIABLE_${1:route_name}\", __name__)",
      "",
      "##############################",
      "@ROUTE_VARIABLE_${1:route_name}.${2:HTTP_METHOD}(${3:\"/END_POINT\"})",
      "def ${4:function_name}():",
      "    try:",
      "        ",
      "        # VALIDATION",
      "",
      "        # db, cursor = x.db()",
      "        # q = \"${5:QUERY_XXXXX WITH %s}\"",
      "        # cursor.execute(q, (${6:TUPLE_VARIABLES}))",
      "        # db.commit()",
      "",
      "        return \"\"\"<template></template>\"\"\"",
      "    ",
      "    except Exception as ex:",
      "",
      "        ic(ex)",
      "        if \"db\" in locals(): db.rollback()",
      "",
      "        # My own exception",
      "        if isinstance(ex, x.CustomException):",
      "            return f\"\"\"<template mix-target=\"#toast\" mix-bottom>{ex.message}</template>\"\"\", ex.code",
      "        ",
      "        # Database exception",
      "        if isinstance(ex, x.mysql.connector.Error):",
      "            ic(ex)",
      "            if \"users.user_email\" in str(ex):",
      "                return \"\"\"<template mix-target=\"#toast\" mix-bottom>email not available</template>\"\"\", 400",
      "            return \"<template>System upgrading</template>\", 500  ",
      "      ",
      "        # Any other exception",
      "        return \"\"\"<template mix-target=\"#toast\" mix-bottom>System under maintenance</template>\"\"\", 500  ",
      "    ",
      "    finally:",
      "        if \"cursor\" in locals(): cursor.close()",
      "        if \"db\" in locals(): db.close()",
      ""
    ],
    "description": "Flask route with blueprint, error handling, and DB operations"
  }
}
